{"version":3,"sources":["webpack://tfstats/webpack/bootstrap","webpack://tfstats/./src/index.ts","webpack://tfstats/./src/factor/index.ts","webpack://tfstats/./src/factor/reliability.ts","webpack://tfstats/./src/data/series.ts","webpack://tfstats/external [\"@tensorflow/tfjs\",\"tf-node\"]","webpack://tfstats/./src/data/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","data","Array","isArray","Series","squ","square","sm","sum","err","values","mul","add","div","index","tf","tensor","this","length","shape","Error","RangeIndex","begin","size","slice","detail","print","mean","sub","ss","sqrt","var","val","vals","tensor1d","console","log","equal","as1D","new_val","Tensor","window","Index","loc","start","stop","step","push","super"],"mappings":"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","file":"build/tfstats.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\";\nexport * as facotr  from './factor/index'\nimport { exp } from '@tensorflow/tfjs';\n// import {factor} from './factor/api' \n// // const factor = require('factor')\n\n// export class tfstat {\n//     version: string\n//     factor: object\n//     constructor(){\n//         this.version='0.01'\n//         this.factor = omega\n//     }\n// }\n\n// we export the class instance via a function call\n// module.exports = () => {\n//     return new tfstat()\n// };\n\n\n\n","\r\n\r\nexport * from './reliability'\r\n","import {Series} from '../data/series'\r\n\r\n\r\nexport function omega(data: Series|Array<number>){\r\n    if(Array.isArray(data)){\r\n        data = new Series(data)\r\n    }\r\n    let squ = data.square()\r\n    let sm = data.sum().square()\r\n    let err = squ.values.mul(-1).add(1).sum()\r\n    return sm.div(sm.add(err))\r\n}","import * as tf from \"@tensorflow/tfjs\"\r\nimport {Index, RangeIndex} from './index'\r\n\r\nexport class Series{\r\n    values:tf.Tensor|tf.Tensor<tf.Rank>;\r\n    index:Index;\r\n    name:string;\r\n    shape:Array<number>;\r\n\r\n    constructor(values:tf.Tensor1D|Array<number>|tf.Tensor<tf.Rank>, index?:Index, name:string='') {\r\n        if(Array.isArray(values)){\r\n            values = tf.tensor(values)\r\n        }\r\n        this.values = values\r\n        if(index){\r\n            if(index.length()==values.shape[0]){\r\n                this.index=index;\r\n            }else{\r\n                throw new Error('index.length!=values.shape[0]')\r\n            }\r\n        }else{\r\n            this.index = new RangeIndex(0, values.shape[0])\r\n        }\r\n        this.name = name;\r\n        this.shape = [this.values.shape[0], ];\r\n    };\r\n\r\n\r\n    select(begin: number, size?:number): Series{\r\n        return new Series(this.values.slice(begin, size))\r\n    }\r\n\r\n    print(detail=false){\r\n        this.values.print(detail)\r\n    }\r\n\r\n    mean():tf.Scalar{\r\n        return tf.mean(this.values)\r\n    };\r\n\r\n    sum():tf.Scalar{\r\n        return tf.sum(this.values)\r\n    };\r\n\r\n    var():tf.Scalar{\r\n        let m = tf.sub(this.values, this.mean());\r\n        let ss = tf.sum(tf.square(m))\r\n        return tf.div(ss, this.shape[0]-1)\r\n    };\r\n\r\n    std():tf.Scalar{\r\n        return tf.sqrt(this.var())\r\n    };\r\n\r\n    equal(val: number):Series{\r\n        let vals = tf.tensor1d([val, ])\r\n        console.log('==========')\r\n        tf.equal(this.values, vals).as1D().print()\r\n        return new Series(tf.equal(this.values, vals).as1D(), this.index)\r\n    }\r\n\r\n    square():Series{\r\n        let vals = tf.square(this.values)\r\n        return new Series(vals, this.index)\r\n    }\r\n\r\n    sub(val:Series|number|tf.Tensor1D):Series{\r\n        let new_val;\r\n        if(val instanceof tf.Tensor){\r\n            new_val = this.values.sub(val)    \r\n        }else if(val instanceof Series){\r\n            new_val = this.values.sub(val.values)\r\n        }else{\r\n            new_val = this.values.sub(val)\r\n        }\r\n        return new Series(new_val, this.index)\r\n    }\r\n}","(function() { module.exports = window[\"@tensorflow/tfjs\"][\"tf-node\"]; }());","export class Index{\r\n    name?:string;\r\n    values: Array<string|number>;\r\n\r\n    constructor(values: Array<string|number>, name:string=''){\r\n        this.values=values;\r\n        this.name=name;\r\n    }\r\n\r\n\r\n    length():number{\r\n        return this.values.length;\r\n    };\r\n\r\n    get_loc(name:string|number){\r\n        let loc = -1;\r\n        for(let i=0;i<this.length();i++){\r\n            if(name==this.values[i]){\r\n                loc=i;\r\n                break\r\n            }\r\n        }\r\n        return loc\r\n    }\r\n}\r\n\r\nexport class RangeIndex extends Index{\r\n    name?: string;\r\n    start: number;\r\n    stop: number;\r\n    step: number;\r\n\r\n    constructor(start: number, stop: number, step:number=1, name:string=''){\r\n        let values = []\r\n        for(let i=start;i<stop;i+=step){\r\n            values.push(i)\r\n        }\r\n        super(values)\r\n        this.start=start;\r\n        this.stop=stop;\r\n        this.step=step;\r\n    }\r\n}"],"sourceRoot":""}